{
  "stats": {
    "suites": 1,
    "tests": 3,
    "passes": 3,
    "pending": 0,
    "failures": 0,
    "start": "2020-01-18T06:45:21.596Z",
    "end": "2020-01-18T06:45:33.686Z",
    "duration": 12090,
    "testsRegistered": 3,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "514fe6c3-d6b9-45e7-926e-e34d047236ca",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "f2fb77ee-8869-4554-bb2f-42c8008deb32",
        "title": "OMDB Movie List",
        "fullFile": "C:\\Users\\Wandi\\Desktop\\poc-mocha-chai\\api\\test\\movie-list-test.js",
        "file": "\\api\\test\\movie-list-test.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "@get As a User, I want to be able to get OMDB Movie list",
            "fullTitle": "OMDB Movie List @get As a User, I want to be able to get OMDB Movie list",
            "timedOut": false,
            "duration": 11320,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const response = await page.getMovieList(apiKey, keySearch);\nassert(response.status).to.equal(200);",
            "err": {},
            "isRoot": false,
            "uuid": "df93bafd-0071-40bb-915f-b0ec960440dd",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "@get As a User, I should got error message when I send request without key of search",
            "fullTitle": "OMDB Movie List @get As a User, I should got error message when I send request without key of search",
            "timedOut": false,
            "duration": 538,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const response = await page.getMovieList(apiKey, '');\nassert(response.status).to.equal(200, response.body.Error);\nassert(response.body.Response).to.equal('False');\nassert(response.body.Error).to.equal('Something went wrong.');",
            "err": {},
            "isRoot": false,
            "uuid": "7436beaf-b17e-41bb-a41e-a53276f330d1",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "@get As a User, I should got error 401 when I send request with invalid API Key",
            "fullTitle": "OMDB Movie List @get As a User, I should got error 401 when I send request with invalid API Key",
            "timedOut": false,
            "duration": 158,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const response = await page.getMovieList(invalidApiKey, keySearch);\nassert(response.status).to.equal(401, response.body.Error);\nassert(response.body.Response).to.equal('False');\nassert(response.body.Error).to.equal('Invalid API key!');",
            "err": {},
            "isRoot": false,
            "uuid": "18d808c4-b231-4aaa-8f1e-f99d47fa99e3",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "df93bafd-0071-40bb-915f-b0ec960440dd",
          "7436beaf-b17e-41bb-a41e-a53276f330d1",
          "18d808c4-b231-4aaa-8f1e-f99d47fa99e3"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 12016,
        "root": false,
        "rootEmpty": false,
        "_timeout": 180000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 180000
  },
  "copyrightYear": 2020
}